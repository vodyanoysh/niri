input {
    keyboard {
        xkb {
            layout "us,ru"
            model ""
            rules ""
            variant ""
            options "grp:win_space_toggle,lv3:ralt_switch"
        }
        repeat-delay 600
        repeat-rate 25
        track-layout "global"
    }
    touchpad {
        tap
        dwt
        dwtp
        natural-scroll
        middle-emulation
        accel-profile "adaptive"
        scroll-method "two-finger"
        click-method "button-areas"
        tap-button-map "left-right-middle"
    }
    mouse { scroll-factor 5.000000; }
    warp-mouse-to-focus
    focus-follows-mouse
    workspace-auto-back-and-forth
}
output "HDMI-A-1" {
    scale 1.000000
    transform "normal"
    position x=0 y=-1080
    mode "2560x1440@59.950000"
}
output "eDP-1" {
    scale 1.000000
    transform "normal"
    position x=0 y=0
}
screenshot-path "~/Pictures/Screenshots/Screenshot-from-%Y-%m-%d-%H-%M-%S.png"
prefer-no-csd
overview { backdrop-color "transparent"; }
layout {
    gaps 6
    struts {
        left 0
        right 0
        top 0
        bottom 0
    }
    focus-ring { off; }
    border {
        width 1
        active-color "#7fb4ca"
        inactive-color "#090e13"
    }
    shadow {
        on
        offset x=0.000000 y=5.000000
        softness 30.000000
        spread 5.000000
        draw-behind-window false
        color "#00000070"
    }
    tab-indicator {
        hide-when-single-tab
        place-within-column
        gap -12.000000
        width 4.000000
        length total-proportion=0.100000
        position "left"
        gaps-between-tabs 10.000000
        corner-radius 20.000000
    }
    insert-hint { color "rgb(127 200 255 / 50%)"; }
    default-column-width { proportion 0.500000; }
    preset-column-widths {
        proportion 0.250000
        proportion 0.500000
        proportion 0.750000
        proportion 1.000000
    }
    center-focused-column "never"
}
cursor {
    xcursor-theme "Adwaita"
    xcursor-size 20
}
hotkey-overlay { skip-at-startup; }
environment {
    "CLUTTER_BACKEND" "wayland"
    DISPLAY null
    "GDK_BACKEND" "wayland,x11"
    "MOZ_ENABLE_WAYLAND" "1"
    "NIXOS_OZONE_WL" "1"
    "QT_QPA_PLATFORM" "wayland;xcb"
    "QT_WAYLAND_DISABLE_WINDOWDECORATION" "1"
    "SDL_VIDEODRIVER" "wayland"
}
binds {
    Ctrl+Alt+L { spawn "sh" "-c" "pgrep hyprlock || hyprlock"; }
    Mod+C { center-visible-columns; }
    Mod+Comma { consume-window-into-column; }
    Mod+D { spawn "/nix/store/dlmcl625xc2a14c6vh26hrp4v68ln1cs-anyrun-0-unstable-2025-05-27/bin/anyrun"; }
    Mod+Down { focus-workspace-down; }
    Mod+F { maximize-column; }
    Mod+H { focus-column-left; }
    Mod+J { focus-window-or-workspace-down; }
    Mod+K { focus-window-or-workspace-up; }
    Mod+L { focus-column-right; }
    Mod+Left { focus-column-left; }
    Mod+Minus { set-column-width "-10%"; }
    Mod+Period { expel-window-from-column; }
    Mod+Plus { set-column-width "+10%"; }
    Mod+Q { close-window; }
    Mod+Right { focus-column-right; }
    Mod+S { switch-preset-column-width; }
    Mod+Shift+Alt+S { screenshot-window; }
    Mod+Shift+Ctrl+J { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K { move-column-to-monitor-up; }
    Mod+Shift+F { toggle-window-floating; }
    Mod+Shift+H { move-column-left; }
    Mod+Shift+J { move-column-to-workspace-down; }
    Mod+Shift+K { move-column-to-workspace-up; }
    Mod+Shift+L { move-column-right; }
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Plus { set-window-height "+10%"; }
    Mod+Shift+S { screenshot show-pointer=false; }
    Mod+T { spawn "/nix/store/wqa75pw63x1ab9ci3x3shrc3ychc06ja-ghostty-1.1.3/bin/ghostty"; }
    Mod+Tab { switch-focus-between-floating-and-tiling; }
    Mod+U { spawn "sh" "-c" "env XDG_CURRENT_DESKTOP=gnome gnome-control-center"; }
    Mod+Up { focus-workspace-up; }
    Mod+W { toggle-column-tabbed-display; }
    Print { screenshot-screen write-to-disk=true; }
    XF86AudioLowerVolume { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "5%-"; }
    XF86AudioMicMute { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
    XF86AudioMute { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioNext { spawn "/nix/store/hr977my77sniz5yldi13ixdfmrqk0igc-playerctl-2.4.1/bin/playerctl" "next"; }
    XF86AudioPlay { spawn "/nix/store/hr977my77sniz5yldi13ixdfmrqk0igc-playerctl-2.4.1/bin/playerctl" "play-pause"; }
    XF86AudioPrev { spawn "/nix/store/hr977my77sniz5yldi13ixdfmrqk0igc-playerctl-2.4.1/bin/playerctl" "previous"; }
    XF86AudioRaiseVolume { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "5%+"; }
    XF86AudioStop { spawn "/nix/store/hr977my77sniz5yldi13ixdfmrqk0igc-playerctl-2.4.1/bin/playerctl" "pause"; }
    XF86MonBrightnessDown { spawn "/nix/store/bfr40ydvgzz8nncrn4zil9b2jamm18j3-brillo-1.4.13/bin/brillo" "-q" "-u" "300000" "-U" "5"; }
    XF86MonBrightnessUp { spawn "/nix/store/bfr40ydvgzz8nncrn4zil9b2jamm18j3-brillo-1.4.13/bin/brillo" "-q" "-u" "300000" "-A" "5"; }
}
spawn-at-startup "hyprlock"
spawn-at-startup "swww-daemon"
spawn-at-startup "waybar"
spawn-at-startup "wl-paste" "--watch" "cliphist" "store"
spawn-at-startup "wl-paste" "--type text" "--watch" "cliphist" "store"
window-rule {
    draw-border-with-background false
    geometry-corner-radius 16.000000 16.000000 16.000000 16.000000
    clip-to-geometry true
}
window-rule {
    match is-floating=true
    shadow { on; }
}
window-rule {
    match is-window-cast-target=true
    border { inactive-color "#7d0d2d"; }
    focus-ring {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }
    shadow { color "#7d0d2d70"; }
    tab-indicator {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }
}
window-rule {
    match app-id="org.telegram.desktop"
    block-out-from "screencast"
}
window-rule {
    match app-id="app.drey.PaperPlane"
    block-out-from "screencast"
}
window-rule {
    match app-id="zen"
    match app-id="firefox"
    match app-id="chromium-browser"
    match app-id="xdg-desktop-portal-gtk"
    scroll-factor 0.200000
}
window-rule {
    match app-id="zen"
    match app-id="firefox"
    match app-id="chromium-browser"
    match app-id="edge"
    open-maximized true
}
window-rule {
    match app-id="firefox" title="Picture-in-Picture"
    default-column-width { fixed 480; }
    default-window-height { fixed 270; }
    open-floating true
    default-floating-position relative-to="bottom-right" x=32 y=32
}
window-rule {
    match app-id="zen" title="Picture-in-Picture"
    default-column-width { fixed 480; }
    default-window-height { fixed 270; }
    open-floating true
    default-floating-position relative-to="bottom-right" x=32 y=32
}
window-rule {
    match title="Picture in picture"
    open-floating true
    default-floating-position relative-to="bottom-right" x=32 y=32
}
window-rule {
    match title="Discord Popout"
    open-floating true
    default-floating-position relative-to="bottom-right" x=32 y=32
}
window-rule {
    match app-id="pavucontrol"
    open-floating true
}
window-rule {
    match app-id="pavucontrol-qt"
    open-floating true
}
window-rule {
    match app-id="com.saivert.pwvucontrol"
    open-floating true
}
window-rule {
    match app-id="io.github.fsobolev.Cavalier"
    open-floating true
}
window-rule {
    match app-id="dialog"
    open-floating true
}
window-rule {
    match app-id="popup"
    open-floating true
}
window-rule {
    match app-id="task_dialog"
    open-floating true
}
window-rule {
    match app-id="gcr-prompter"
    open-floating true
}
window-rule {
    match app-id="file-roller"
    open-floating true
}
window-rule {
    match app-id="org.gnome.FileRoller"
    open-floating true
}
window-rule {
    match app-id="nm-connection-editor"
    open-floating true
}
window-rule {
    match app-id="blueman-manager"
    open-floating true
}
window-rule {
    match app-id="xdg-desktop-portal-gtk"
    open-floating true
}
window-rule {
    match app-id="org.kde.polkit-kde-authentication-agent-1"
    open-floating true
}
window-rule {
    match app-id="pinentry"
    open-floating true
}
window-rule {
    match title="Progress"
    open-floating true
}
window-rule {
    match title="File Operations"
    open-floating true
}
window-rule {
    match title="Copying"
    open-floating true
}
window-rule {
    match title="Moving"
    open-floating true
}
window-rule {
    match title="Properties"
    open-floating true
}
window-rule {
    match title="Downloads"
    open-floating true
}
window-rule {
    match title="file progress"
    open-floating true
}
window-rule {
    match title="Confirm"
    open-floating true
}
window-rule {
    match title="Authentication Required"
    open-floating true
}
window-rule {
    match title="Notice"
    open-floating true
}
window-rule {
    match title="Warning"
    open-floating true
}
window-rule {
    match title="Error"
    open-floating true
}
layer-rule { match namespace="^swww$"; }
animations { window-resize { custom-shader "vec4 resize_color(vec3 coords_curr_geo, vec3 size_curr_geo) {\n  vec3 coords_next_geo = niri_curr_geo_to_next_geo * coords_curr_geo;\n\n  vec3 coords_stretch = niri_geo_to_tex_next * coords_curr_geo;\n  vec3 coords_crop = niri_geo_to_tex_next * coords_next_geo;\n\n  // We can crop if the current window size is smaller than the next window\n  // size. One way to tell is by comparing to 1.0 the X and Y scaling\n  // coefficients in the current-to-next transformation matrix.\n  bool can_crop_by_x = niri_curr_geo_to_next_geo[0][0] <= 1.0;\n  bool can_crop_by_y = niri_curr_geo_to_next_geo[1][1] <= 1.0;\n\n  vec3 coords = coords_stretch;\n  if (can_crop_by_x)\n      coords.x = coords_crop.x;\n  if (can_crop_by_y)\n      coords.y = coords_crop.y;\n\n  vec4 color = texture2D(niri_tex_next, coords.st);\n\n  // However, when we crop, we also want to crop out anything outside the\n  // current geometry. This is because the area of the shader is unspecified\n  // and usually bigger than the current geometry, so if we don't fill pixels\n  // outside with transparency, the texture will leak out.\n  //\n  // When stretching, this is not an issue because the area outside will\n  // correspond to client-side decoration shadows, which are already supposed\n  // to be outside.\n  if (can_crop_by_x && (coords_curr_geo.x < 0.0 || 1.0 < coords_curr_geo.x))\n      color = vec4(0.0);\n  if (can_crop_by_y && (coords_curr_geo.y < 0.0 || 1.0 < coords_curr_geo.y))\n      color = vec4(0.0);\n\n  return color;\n}\n"; }; }
